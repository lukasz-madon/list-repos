{
  "name": "grunt-protractor-runner",
  "description": "A Grunt plugin for running protractor runner.",
  "version": "1.0.1",
  "homepage": "https://github.com/teerapap/grunt-protractor-runner",
  "author": {
    "name": "Teerapap Changwichukarn",
    "email": "teerapap.c@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/teerapap/grunt-protractor-runner.git"
  },
  "bugs": {
    "url": "https://github.com/teerapap/grunt-protractor-runner/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/teerapap/grunt-protractor-runner/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "node test/runtest.js"
  },
  "dependencies": {
    "protractor": ">=0.14.0-0 <1.0.0"
  },
  "devDependencies": {
    "nexpect": "~0.4.0",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "protractor",
    "selenium",
    "angular",
    "angularjs"
  ],
  "readme": "# grunt-protractor-runner\n\n> A Grunt plugin for running [Protractor](https://github.com/angular/protractor) runner.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1` and Protractor `>=0.14.0-0 <1.0.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-protractor-runner --save-dev\n```\n\nThis plugin will install `protractor` module locally as a normal dependency.\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-protractor-runner');\n```\n\nIf you want to use standalone selenium server, run `./node_modules/protractor/bin/webdriver-manager update` to install/update the selenium server for local installed protractor.\n\n## The \"protractor\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `protractor` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  protractor: {\n    options: {\n      configFile: \"node_modules/protractor/referenceConf.js\", // Default config file\n      keepAlive: true, // If false, the grunt process stops when the test fails.\n      noColor: false, // If true, protractor will not use colors in its output.\n      args: {\n        // Arguments passed to the command\n      }\n    },\n    your_target: {\n      options: {\n        configFile: \"e2e.conf.js\", // Target-specific config file\n        args: {} // Target-specific arguments\n      }\n    },\n  },\n})\n```\n\n### Options\n\n#### options.configFile\nType: `String`\nDefault value: `node_modules/protractor/referenceConf.js` relative to where protractor module is installed.\n\nA protractor config file.\n\n#### options.keepAlive\nType: `Boolean`\nDefault value: `false` (`true` before v1.0.0)\n\nIf true, grunt process continues even if the test fails. This option is useful when using with grunt watch.\nIf false, grunt process stops when the test fails.\n\n#### options.noColor\nType: `Boolean`\nDefault value: `false`\n\nIf true, protractor will not give colored output.\nIf false, protractor will give colored output, as it does by default.\n\n#### options.debug\nType: `Boolean`\nDefault value: `false`\n\nIf true, grunt will pass 'debug' as second argument to protractor CLI to enable node CLI debugging as described in [Protractor Debugging documentation](https://github.com/angular/protractor/blob/master/docs/debugging.md).\n\n#### options.args\nType: `Object`\nDefault value: `{}`\n\nArguments passed to the command. These arguments can also be supplied via command-line too. Ex.`grunt protractor --specs=specs/some-test.js`\nSupported arguments are below.\n\n* seleniumAddress `string`: A running selenium address to use\n* seleniumServerJar `string`: Location of the standalone selenium server .jar file\n* seleniumPort `string`: Optional port for the standalone selenium server\n* baseUrl `string`: URL to prepend to all relative paths\n* rootElement `string`: Element housing ng-app, if not html or body\n* specs `array`: Array of spec files to test. Ex. `[\"spec1.js\",\"spec2.js\"]`\n* exclude `array`: Array of files to exclude from testing. Ex. `[\"spec2.js\"]`\n* suite `string`: Name of test suite to run\n* includeStackTrace `boolean`: Print stack trace on error\n* verbose `boolean`: Print full spec names\n* browser `string`: Browser name, e.g. chrome or firefox\n* params `object`: Param object to be passed to the test as browser.params\n* chromeDriver `string`: Location of chrome driver overridng the property in config file\n* chromeOnly `boolean`: Bypass Selenium for Chrome only testing\n* sauceUser `string`: Username for a SauceLabs account\n* sauceKey `string`: Access Key for a SauceLabs account\n* capabilities `object`: Capabilities object to be passed to the test, e.g. browserName, platform and version\n* framework `string`: Limited support for using mocha as the test framework instead of jasmine.\n* cucumberOpts `object`: Cucumber framework options object to be passed to the test, e.g. require, tags and format\n* mochaOpts `object`: Mocha test framework options object to be passed\n\n## Tests\n\nRun `npm install` to install dependencies.\n\nThen run `grunt` or `npm test` to test the module. You will encounter these.\n\n* It opens chrome a couple of times without warnings or errors.\n* A test task fails but the test process keeps alive and continues to the next test tasks.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## FAQ\n\n### Q: Want to global installed protractor?\n\nThis plugin installs `protractor` module locally as a normal dependency.\n\nIn case you want to use the plugin with the global installed protractor command. You can do it with these steps below.\n\n* Remove local install protractor by `rm -rf node_modules/protractor`\n* Install `protractor` globally  with `npm install -g protractor`\n* Make sure that node can resolve the module with `require()` mechanism. See [Module loding from the global folders](http://nodejs.org/api/modules.html#modules_loading_from_the_global_folders) for more information.\n* Run `webdriver-manager update` to install/update selenium driver for global install protractor.\n\n## Release History\n\n* 1.0.1\n  * Pass specified command line params to the subprocess (#68)\n  * Make npm test to run and handle interactive debugger by itself (#66)\n  * Fixed argsTest\n* 1.0.0\n  * Change default value of `options.keepAlive` to false (#50)\n\n* 0.2.5\n  * Support --mochaOpts, --suite and --exclude in options.args (#52, #53, #57)\n* 0.2.4\n  * Support --cucumberOpts in options.args (#46)\n* 0.2.3\n  * Temporarily remove automatically download/update webdriver-manager because it fails in some environment such as Windows (#41)\n* 0.2.2\n  * Add `protractor` module as a normal dependency and automatically download/update webdriver with `webdriver-manager` after installed (#29, #39)\n  * Support --framework in options.args (#36)\n* 0.2.1\n  * Support --capabilities in options.args (#33)\n* 0.2.0\n  * Able to use either local or global install protractor the same way as how `require()` function works (#29)\n  * Move protractor from `peerDependencies` to `devDependencies`. These changes might break some user modules. (See FAQ above for explanation) (#29)\n* 0.1.11 - Support SauceLabs account config in options.args (#27)\n* 0.1.10\n  * Support --chromeOnly in options.args (#23)\n  * Support options.noColor to turn color off in protractor output (#24)\n* 0.1.9\n  * Able to supply options.args via command-line arguments (#20)\n  * Fixed merging task-level and target-level options\n* 0.1.8 - Support --chromeDriver in options.args (#17)\n* 0.1.7 - Support --browser and --params arguments passed to the protractor command using config in options.args (#12)\n* 0.1.6 - Change protractor(peerDependencies) to support version to 0.x (#8, #9, #10)\n* 0.1.5 - Added `options.debug` (#7)\n* 0.1.4 - Change protractor(peerDependencies) to support version to 0.10.x - 0.11.x (#6)\n* 0.1.3 - Fixed Windows command\n* 0.1.2 - Added keepAlive option.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-protractor-runner@1.0.1",
  "dist": {
    "shasum": "d82ac7983d8aeee6b1645919c1452ed6d3300a70"
  },
  "_from": "grunt-protractor-runner@",
  "_resolved": "https://registry.npmjs.org/grunt-protractor-runner/-/grunt-protractor-runner-1.0.1.tgz"
}
